<#@ include file="$(SolutionDir)common.t4" #>
using Bas.RedYarn.WebApp.ViewModels;
using System;
using System.Collections.ObjectModel;
using System.Threading.Tasks;

namespace Bas.RedYarn.WebApp.Services
{
    public interface IDataService
    {
		Task<Collection<DiagramListItemViewModel>> GetDiagramsAsync();

<#
foreach (var viewModelName in viewModelNames.Except(extraViewModelNames))
{
	WriteDeclarations(viewModelName, "Guid id");
}

foreach (var viewModelName in extraViewModelNames)
{
	WriteDeclarations(viewModelName, "Guid fromNodeId, Guid toNodeId");
}

void WriteDeclarations(string viewModelName, string idParameters)
{
#>
		Task<<#=viewModelName#>> Get<#=viewModelName#>Async(<#=idParameters#>);
<#
	if (entitiesToAddToDiagram.Contains(GetModelName(viewModelName)))
	{
#>		Task<<#=viewModelName#>> Create<#=viewModelName#>Async(Guid diagramId, <#=viewModelName#> <#=Decapitalize(viewModelName)#>); <#
	}
	else
	{
#>		Task<<#=viewModelName#>> Create<#=viewModelName#>Async(<#=viewModelName#> <#=Decapitalize(viewModelName)#>); <#
	}
#>		
		Task<(<#=viewModelName#> result, bool isFound)> Update<#=viewModelName#>Async(<#=idParameters#>, <#=viewModelName#> <#=Decapitalize(viewModelName)#>);
        Task<bool> Delete<#=viewModelName#>Async(<#=idParameters#>);

<#
}
#>
	}
}