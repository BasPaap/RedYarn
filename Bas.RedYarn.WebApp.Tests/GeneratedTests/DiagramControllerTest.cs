//------------------------------------------------------------------------------ 
// <auto-generated> 
// This code was generated by a tool. 
// 
// Changes to this file may cause incorrect behavior and will be lost if 
// the code is regenerated. 
// </auto-generated> 
//------------------------------------------------------------------------------

using Microsoft.AspNetCore.Mvc;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using Bas.RedYarn.WebApp.Controllers;
using Bas.RedYarn.WebApp.Tests.Services;
using Bas.RedYarn.WebApp.ViewModels;

namespace Bas.RedYarn.WebApp.Tests
{
    public partial class DiagramControllerTest
    {
		private TestDataService dataService;
        private DiagramController diagramController;

        [TestInitialize]
        public void Initialize()
        {
			this.dataService = new TestDataService();
            this.diagramController = new DiagramController(this.dataService);
        }

		#region Create
		[TestMethod]
		public void CreateDiagram_ArgumentIsNull_Returns400BadRequest()
		{
			// Arrange
			// Act
			var result = this.diagramController.CreateDiagramAsync(null);
			
			// Assert
			Assert.IsInstanceOfType(result, typeof(BadRequestResult));
		}

		[TestMethod]
		public void CreateDiagram_ModelIsInvalud_Returns400BadRequest()
		{
			// Arrange
			var diagramViewModel = new DiagramViewModel()
			{
				Name = ""
			};

			// Act
			var result = this.diagramController.CreateDiagramAsync(diagramViewModel);
			
			// Assert
			Assert.IsInstanceOfType(result, typeof(BadRequestResult));
		}
		
		[TestMethod]
		public void CreateDiagram_ArgumentIsOk_Returns201Created()
		{
			// Arrange

			// Act
			var result = ((this.diagramController.CreateDiagramAsync(null)).Result.Result) as CreatedAtActionResult;
			
			// Assert
			Assert.IsNotNull(result);
			Assert.AreEqual(201, (int)result.StatusCode);
			Assert.AreEqual(nameof(DiagramController), result.ControllerName);
			Assert.AreEqual(nameof(DiagramController.GetDiagramViewModel), result.ActionName);
			Assert.IsInstanceOfType(result.Value, typeof(DiagramViewModel));
			Assert.IsNotNull(result.RouteValues["id"]);
			Assert.AreEqual((result.Value as DiagramViewModel).Id, (Guid)result.RouteValues["id"]);
			AssertCreatedDiagram(result.Value as DiagramViewModel);
		}

		#endregion

		#region Update
		
		#endregion

		#region Delete
		
		#endregion

		#region Get
		
		#endregion

	}
}
